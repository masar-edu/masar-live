name: "Install BBB"
description: "Install BigBlueButton"
runs:
  using: "composite"
  steps:
    - name: Merge branches
      uses: ./.github/actions/merge-branches
    - run: ./build/get_external_dependencies.sh
      shell: bash
    - name: Add apt ppa for BBB dependencies
      shell: bash
      run: |
        sudo LC_CTYPE=C.UTF-8 add-apt-repository -y ppa:rmescandon/yq
        sudo LC_CTYPE=C.UTF-8 add-apt-repository -y ppa:bigbluebutton/support
        sudo LC_CTYPE=C.UTF-8 add-apt-repository -y ppa:martin-uni-mainz/coturn
        sudo apt update
    - name: Download all BBB dependencies from cache
      uses: Eeems-Org/apt-cache-action@v1
      with:
        packages: cairosvg ffmpeg fonts-arkpandora fonts-crosextra-caladea fonts-crosextra-carlito fonts-droid-fallback fonts-noto fonts-noto-cjk fonts-noto-cjk-extra fonts-noto-core fonts-noto-extra fonts-noto-mono fonts-noto-ui-core fonts-noto-ui-extra fonts-noto-unhinted fonts-urw-base35 ghostscript gir1.2-harfbuzz-0.0 gir1.2-pango-1.0 i965-va-driver intel-media-va-driver libaacs0 libass9 libasyncns0 libavc1394-0 libavcodec58 libavdevice58 libavfilter7 libavformat58 libavutil56 libbdplus0 libbluray2 libbs2b0 libcaca0 libcdio-cdda2 libcdio-paranoia2 libcdio19 libchromaprint1 libcodec2-1.0 libdc1394-25 libdecor-0-0 libdecor-0-plugin-1-cairo libflac8 libflite1 libgme0 libgs9 libgs9-common libgsm1 libidn12 libiec61883-0 libigdgmm12 libijs-0.35 libimagequant0 libjack-jackd2-0 libjbig2dec0 libjemalloc2 libldns3 liblilv-0-0 liblua5.1-0 liblua5.2-0 liblzf1 libmfx1 libmp3lame0 libmpg123-0 libmysofa1 libncurses5 libopenal-data libopenal1 libopenmpt0 libopus0 libopusenc0 libopusfile0 libpangoxft-1.0-0 libpocketsphinx3 libpoppler118 libpostproc55 libpotrace0 libpulse0 libraqm0 libraw1394-11 librubberband2 libsamplerate0 libsdl2-2.0-0 libserd-0-0 libshine3 libsndfile1 libsndio7.0 libsord-0-0 libsoxr0 libspeex1 libspeexdsp1 libsphinxbase3 libsratom-0-0 libsrt1.4-gnutls libssh-gcrypt-4 libswresample3 libswscale5 libtheora0 libtinfo5 libtwolame0 libudfread0 libva-drm2 libva-x11-2 libva2 libvdpau1 libvidstab1.1 libvorbisenc2 libvpx7 libx264-163 libxvidcore4 libzimg2 libzvbi-common libzvbi0 lua-bitop lua-cjson mesa-va-drivers mesa-vdpau-drivers nodejs ocl-icd-libopencl1 openjdk-17-jdk openjdk-17-jdk-headless pocketsphinx-en-us poppler-data poppler-utils postgresql-contrib potrace python-tinycss2-common python3-bs4 python3-cairo python3-cairocffi python3-cairosvg python3-cffi python3-cssselect2 python3-defusedxml python3-gi-cairo python3-html5lib python3-icu python3-lxml python3-olefile python3-pil python3-ply python3-pycparser python3-soupsieve python3-tinycss2 python3-webencodings python3-xcffib redis-server redis-tools ruby-bundler stun-client va-driver-all vdpau-driver-all xmlstarlet autopoint cmake cmake-data dh-autoreconf dh-elpa-helper libdbus-1-dev libdebhelper-perl libjsoncpp25 libncurses5-dev libpcap-dev libpcap0.8-dev librhash0 libsctp-dev libsctp1 lksctp-tools pkg-config apparmor-utils python3-apparmor python3-libapparmor yq gnupg-agent ca-certificates-java libatk-wrapper-java libatk-wrapper-java-jni libpcsclite1 libxcb-shape0 libxv1 libxxf86dga1 openjdk-17-jre openjdk-17-jre-headless x11-utils build-essential fonts-freefont-ttf fonts-ipafont-gothic fonts-tlwg-loma-otf fonts-unifont fonts-wqy-zenhei gstreamer1.0-libav gstreamer1.0-plugins-bad gstreamer1.0-plugins-base gstreamer1.0-plugins-good libaa1 libcdparanoia0 libdca0 libdv4 libdvdnav4 libdvdread8 libegl-mesa0 libegl1 libevdev2 libevent-2.1-7 libfaad2 libffi7 libfluidsynth3 libfreeaptx0 libgles2 libgssdp-1.2-0 libgstreamer-gl1.0-0 libgstreamer-plugins-bad1.0-0 libgstreamer-plugins-base1.0-0 libgstreamer-plugins-good1.0-0 libgupnp-1.2-1 libgupnp-igd-1.0-4 libharfbuzz-icu0 libhyphen0 libinstpatch-1.0-2 libkate1 libldacbt-enc2 libltc11 libmanette-0.2-0 libmjpegutils-2.1-0 libmodplug1 libmpcdec6 libmpeg2encpp-2.1-0 libmplex2-2.1-0 libnice10 libnotify4 libopengl0 libopenh264-6 libopenni2-0 liborc-0.4-0 libqrencode4 libsbc1 libshout3 libsoundtouch1 libsoup-3.0-0 libsoup-3.0-common libspandsp2 libsrtp2-1 libtag1v5 libtag1v5-vanilla libv4l-0 libv4lconvert0 libvisual-0.4-0 libvo-aacenc0 libvo-amrwbenc0 libwavpack1 libwebrtc-audio-processing1 libwildmidi2 libwoff1 libzbar0 libzxingcore1 timgm6mb-soundfont xfonts-cyrillic xfonts-encodings xfonts-scalable
    - name: Download all BBB artifacts
      uses: actions/download-artifact@v4
      with:
        name: all-bbb-artifacts
        path: artifacts
    - name: List downloaded artifacts
      shell: bash
      run: |
        set -e
        echo "----ls artifacts/----"
        ls artifacts/
    - name: Set libreoffice docker image cache-key vars
      shell: bash
      run: |
        echo "BBB_LIBREOFFICE_IMAGE_NAME=$(head -n 1 bbb-libreoffice/docker/Dockerfile | cut -d ' ' -f 2)" >> $GITHUB_ENV
    - name: Restore bbb-libreoffice.tar from cache
      id: cache
      uses: actions/cache@v4
      with:
        path: bbb-libreoffice.tar
        key: ${{ env.BBB_LIBREOFFICE_IMAGE_NAME }}
    - name: Load docker image from bbb-libreoffice.tar
      shell: bash
      if: steps.cache.outputs.cache-hit == 'true'
      run: docker load -i bbb-libreoffice.tar
    - name: Generate CA
      shell: bash
      run: |
        sudo -i <<EOF
        set -e
        mkdir /root/bbb-ci-ssl/
        cd /root/bbb-ci-ssl/
        openssl rand -base64 48 > /root/bbb-ci-ssl/bbb-dev-ca.pass ;
        chmod 600 /root/bbb-ci-ssl/bbb-dev-ca.pass ;
        openssl genrsa -des3 -out bbb-dev-ca.key -passout file:/root/bbb-ci-ssl/bbb-dev-ca.pass 2048 ;
        openssl req -x509 -new -nodes -key bbb-dev-ca.key -sha256 -days 1460 -passin file:/root/bbb-ci-ssl/bbb-dev-ca.pass -out bbb-dev-ca.crt -subj "/C=CA/ST=BBB/L=BBB/O=BBB/OU=BBB/CN=BBB-DEV" ;
        EOF
    - name: Trust CA
      shell: bash
      run: |
        sudo -i <<EOF
        set -e
        sudo mkdir /usr/local/share/ca-certificates/bbb-dev/
        sudo cp /root/bbb-ci-ssl/bbb-dev-ca.crt /usr/local/share/ca-certificates/bbb-dev/
        sudo chmod 644 /usr/local/share/ca-certificates/bbb-dev/bbb-dev-ca.crt
        sudo update-ca-certificates
        EOF
    - name: Generate certificate
      shell: bash
      run: |
        sudo sh -c '
        cd /root/bbb-ci-ssl/
        echo "$(hostname -I | cut -d" " -f1) bbb-ci.test" >> /etc/hosts
        openssl genrsa -out bbb-ci.test.key 2048
        rm -f bbb-ci.test.csr bbb-ci.test.crt bbb-ci.test.key
        cat > bbb-ci.test.ext << EOF
        authorityKeyIdentifier=keyid,issuer
        basicConstraints=CA:FALSE
        keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment
        subjectAltName = @alt_names
        [alt_names]
        DNS.1 = bbb-ci.test
        EOF
        openssl req -nodes -newkey rsa:2048 -keyout bbb-ci.test.key -out bbb-ci.test.csr -subj "/C=CA/ST=BBB/L=BBB/O=BBB/OU=BBB/CN=bbb-ci.test" -addext "subjectAltName = DNS:bbb-ci.test"
        openssl x509 -req -in bbb-ci.test.csr -CA bbb-dev-ca.crt -CAkey bbb-dev-ca.key -CAcreateserial -out bbb-ci.test.crt -days 825 -sha256 -passin file:/root/bbb-ci-ssl/bbb-dev-ca.pass -extfile bbb-ci.test.ext
        cd

        mkdir -p /local/certs/
        cp /root/bbb-ci-ssl/bbb-dev-ca.crt /local/certs/
        cat /root/bbb-ci-ssl/bbb-ci.test.crt > /local/certs/fullchain.pem
        cat /root/bbb-ci-ssl/bbb-dev-ca.crt >> /local/certs/fullchain.pem
        cat /root/bbb-ci-ssl/bbb-ci.test.key > /local/certs/privkey.pem
        '
    - name: Setup local repository
      shell: bash
      run: |
        sudo -i <<EOF
        set -e
        apt install -yq dpkg-dev
        cd /root && wget -nv http://ci.bbb.imdt.dev/cache-3rd-part-packages.tar
        cp -r /home/runner/work/bigbluebutton/bigbluebutton/artifacts/ /artifacts/
        cd /artifacts && tar xf /root/cache-3rd-part-packages.tar
        cd /artifacts && dpkg-scanpackages . /dev/null | gzip -9c > Packages.gz
        echo "deb [trusted=yes] file:/artifacts/ ./" >> /etc/apt/sources.list
        EOF
    - name: Prepare for install
      shell: bash
      run: |
        sudo sh -c '
        apt --purge -y remove apache2-bin
        apt-mark hold firefox #hold ff as bbb-install frequently stuck at `Installing the firefox snap`

        #bbb-webrtc-sfu: removes the special scheduling policies
        mkdir -p /etc/systemd/system/bbb-webrtc-sfu.service.d/
        tee /etc/systemd/system/bbb-webrtc-sfu.service.d/override.conf > /dev/null <<EOL
        [Service]
        CPUSchedulingPolicy=other
        Nice=19
        EOL
        systemctl daemon-reload

        #Install Sipp for dial-in tests
        apt install -y pkg-config dh-autoreconf ncurses-dev build-essential libssl-dev libpcap-dev libncurses5-dev libsctp-dev lksctp-tools cmake
        git clone --recurse-submodules https://github.com/SIPp/sipp.git /opt/sipp
        cd /opt/sipp
        git checkout 4682fdba2b63007f13a632c6eb06f0ece84cb7df #Set an old commit as the current code is not working
        cmake . -DUSE_SSL=1 -DUSE_SCTP=1 -DUSE_PCAP=1 -DUSE_GSL=1
        make
        sudo make install
        rm -r /opt/sipp/gtest
        rm -r /opt/sipp/src

        # Set dial plan for internal calls
        mkdir -p /opt/freeswitch/conf/dialplan/public/
        cat << EOF > "/opt/freeswitch/conf/dialplan/public/bbb_sip.xml"
        <include>
          <extension name="bbb_sp_call" continue="true">
              <condition field="network_addr" expression="\${domain}" break="on-false">
                  <action application="set" data="bbb_authorized=true"/>
                  <action application="transfer" data="\${destination_number} XML default"/>
              </condition>
          </extension>
        </include>
        EOF
        '
    - name: Install BBB
      shell: bash
      env:
        NODE_EXTRA_CA_CERTS: /usr/local/share/ca-certificates/bbb-dev/bbb-dev-ca.crt
        ACTIONS_RUNNER_DEBUG: true
      run: |
        sudo -i <<'EOF'
        set -e
        cd /root/
        wget -nv https://raw.githubusercontent.com/bigbluebutton/bbb-install/v3.0.x-release/bbb-install.sh -O bbb-install.sh
        sed -i "s|> /etc/apt/sources.list.d/bigbluebutton.list||g" bbb-install.sh
        chmod +x bbb-install.sh

        ./bbb-install.sh -v jammy-30-dev -s bbb-ci.test -j -d /certs/

        bbb-conf --salt bbbci
        sed -i "s/\"minify\": true,/\"minify\": false,/" /usr/share/etherpad-lite/settings.json
        sed -i "s/\"loglevel\": \"INFO\"/\"loglevel\": \"DEBUG\"/" /usr/share/etherpad-lite/settings.json
        sed -i "s/\"level\": \"info\"/\"level\": \"debug\"/" /usr/local/bigbluebutton/bbb-pads/config/settings.json
        sed -i "s/exports.DEBUG = false/exports.DEBUG = true/" /usr/local/bigbluebutton/bbb-graphql-actions/config.js
        sudo yq e -i '.log_level = "TRACE"' /usr/share/bbb-graphql-middleware/config.yml
        echo "HASURA_GRAPHQL_LOG_LEVEL=debug" | tee -a /etc/bigbluebutton/bbb-graphql-server.env
        cat > /etc/bigbluebutton/bbb-conf/apply-config.sh << HERE
        #!/bin/bash

        # Pull in the helper functions for configuring BigBlueButton
        source /etc/bigbluebutton/bbb-conf/apply-lib.sh

        # Available configuration options

        enableHTML5ClientLog
        #enableUFWRules

        HERE
        chmod +x /etc/bigbluebutton/bbb-conf/apply-config.sh
        bbb-conf --restart
        EOF
    - name: List systemctl services
      shell: bash
      run: |
        sudo -i <<EOF
        timeout 60 systemctl --type=service --state=running,exited,failed --all --no-pager --no-legend
        EOF
